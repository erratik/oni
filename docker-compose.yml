version: '3.7'

volumes:
  mongo:
  redis:

networks:
  mongo_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24

services:
  oni_redis:
    container_name: '${PROJECT_NAME}-redis'
    image: redis
    networks:
      - mongo_net
    volumes:
      - redis:/data
    ports:
      - '6379:6379'

  # MongoDB and document data store
  oni_mongo:
    container_name: '${PROJECT_NAME}-mongo'
    image: mongo
    environment:
      - USEIP=${MONGO_USEIP}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - AUTH=no
    restart: always
    networks:
      mongo_net:
        ipv4_address: ${MONGO_USEIP}
    volumes:
      - mongo:/data
      - ./data/dump:/data/dump
      - ./data/dump/${MONGO_DATABASE}:/data/${MONGO_DATABASE}
      - ./scripts/mongo.geisha.sh:/mongo.geisha.sh
    ports:
      - '27017:27017'
    command: /bin/bash mongo.geisha.sh

  oni:
    image: node:9.6.1-alpine
    container_name: '${PROJECT_NAME}'
    working_dir: /app
    depends_on:
      - '${PROJECT_NAME}_redis'
      - '${PROJECT_NAME}_mongo'
      # - '${PROJECT_NAME}_nginx'
    networks:
      mongo_net:
    environment:
      - REDIS_HOST=oni_redis
      - CORS_ORIGIN=http://localhost:10011, https://datawhore.erratik.ca:10011
      - NODE_ENV=dev
      - REDIS_URL=redis://redis:6379/0
      - MONGO_URI=mongodb://172.16.0.3:27017/datawhore
      - SESSION_SECRET=fiddle-farter
      - PORT=10011
    ports:
      - '10011:10011'
      - '127.0.0.1:9229:9229'
    volumes:
      - $PWD/.ssl:/app/ssl
      - $PWD/tmp:/app/tmp
      - $PWD/dist:/app/dist
      - $PWD/node_modules:/app/node_modules
      - $PWD/package.json:/app/package.json
    command: node --inspect=0.0.0.0:9229 /app/dist/main.js
    restart: always
