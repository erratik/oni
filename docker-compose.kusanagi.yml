version: "3.2"

volumes:
  mongo:
  redis:
  yarn:
  frontend:

networks:
  middleware:
    driver: bridge
  mongo_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24

services:
  deps:
    container_name: deps
    # image: node:8.9.3-alpine
    image: erratik/kusanagi-deps
    build:
      args:
        NODE_ENV: development
      context: ./
    networks:
      middleware:
    volumes:
      - frontend:/app
      - yarn:/home/node/.cache/yarn
      - ./package.json:/package.json
      - ./yarn.lock:/yarn.lock
      - ./.env.example:/app/.env.example
      - ./env:/app/.env

  # MongoDB and document data store
  init:
    container_name: init
    image: erratik/kusanagi-init
    restart: always
    networks:
      mongo_net:
        ipv4_address: 172.16.0.2
    ports:
      - "27017:27017"
    command: ./run.sh

  mongo_restore:
    container_name: mongo_restore
    image: mongo
    depends_on:
      - init
    networks:
      mongo_net:
    volumes:
      - mongo:/data
      - ./data/heroku_10tzj082:/data/heroku_10tzj082
    command: mongorestore --host=172.16.0.2 --db datawhore -u erratik -p kaya80ate ./data/heroku_10tzj082

  # Distributed in-memory cache
  redis:
    container_name: redis
    image: redis:4.0.6-alpine
    read_only: true
    networks:
      - mongo_net
    depends_on:
      - mongo_restore
    links:
      - mongo_restore
    volumes:
      - redis:/data
    user: redis

  # Data API and authentication/authorization
  api:
    container_name: api
    image: api
    build:
      args:
        NODE_ENV: development
      context: ./
      dockerfile: ./docker.server.Dockerfile
    restart: always
    networks:
      mongo_net:
    links:
      - deps
      - mongo_restore
    depends_on:
      - deps
      - mongo_restore
      - redis
    environment:
      - CORS_ORIGIN=http://localhost:4200,http://localhost:10011,http://datawhore.erratik.ca:4200,http://datawhore.erratik.ca:10011
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379/0
      - MONGO_URL=mongodb://erratik:kaya80ate@172.16.0.2/datawhore
      - MONGO_DBNAME=datawhore
      - PORT=10010
      - HOSTNAME=datawhore.erratik.ca
      - SESSION_SECRET=lumpy-space-princess
    ports:
      - "10010:10010"
      - "127.0.0.1:9229:9229" # V8 inspector for tools/run.js
      - "127.0.0.1:9230:9230" # V8 inspector for src/server.js
    volumes:
      - frontend:/app
      - yarn:/home/node/.cache/yarn
      - ./build:/app/build
      - ./src:/app/src
      - ./tools:/app/tools
      - ./views:/app/views
      - ./public:/app/public
      - ./.babelrc:/app/.babelrc
      - ./.eslintrc.js:/app/.eslintrc.js
      - ./.prettierrc:/app/.prettierrc
      - ./flow-typed:/app/flow-typed
      - ./.flowconfig:/app/.flowconfig
      - ./.gitignore:/app/.gitignore
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
    # command: "node tools/run.js" # or, `node --inspect=0.0.0.0:9229 tools/run.js`
    command: node --inspect=0.0.0.0:9229 tools/run.js

  scheduler:
    container_name: oni
    image: node:8.9.3-alpine
    build:
      args:
        NODE_ENV: development
      context: ./
    restart: always
    environment:
      - CORS_ORIGIN=http://localhost:10011, http://datawhore.erratik.ca:10011
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379/0
      - MONGO_URL=mongodb://erratik:kaya80ate@172.16.0.2/datawhore
      - MONGO_DBNAME=datawhore
      - PORT=10011
      - HOSTNAME=datawhore.erratik.ca
      - SESSION_SECRET=fiddle-farter
    networks:
      mongo_net:
    links:
      - mongo_restore
    depends_on:
      - api
    ports:
      - "10011:10011"
      - "127.0.0.1:9231:9231" # V8 inspector for src/server.js
    volumes:
      - frontend:/app
      - ./build:/app/build
    command: node --inspect=0.0.0.0:9231 app/build/scheduler.js
